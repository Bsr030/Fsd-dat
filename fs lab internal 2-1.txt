fs lab internal 2

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
1.basic state
2.basic props
3.COMPONENT DIDMOUNT
4.SIMPLE RENDER
5.GETDERIVED STATE FROM PROPS
6.(DATA TO USER) REST API:
7.EXPRESS
8.RENDERING LISTS
9.Build Search filter in React
10.Simple counter exercise
11.Simple Login form in React
12.FS
13.addUser in express

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
npm install -g create-react-app //install react
npx create-react-app reactapp1 //To create rreact app
npm start //run react
//express

"type":"module",
npm init -y
npm server.js


import React from 'react';

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      brand: "Ford",
      model: "Mustang",
      color: "red",
      year: 1964
    };
  }
  render() {
    return (
      <div>
        <h1>My {this.state.brand}</h1>
        <p>
          It is a {this.state.color}
          {this.state.model}
          from {this.state.year}.
        </p>
      </div>
    );
  }
}

export default App;

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
import React from 'react';

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {favoritecolor: "red"};
  }
  render() {
    return (
      <h1>My Favorite Color is {this.state.favoritecolor}</h1>
    );
  }
}

export default App;
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&7
COMPONENT DIDMOUNT

import React from 'react';

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {favoritecolor: "red"};
  }
  componentDidMount() {
    setTimeout(() => {
      this.setState({favoritecolor: "yellow"})
    }, 1000)
  }
  render() {
    return (
      <h1>My Favorite Color is {this.state.favoritecolor}</h1>
    );
  }
}
export default App;
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
SIMPLE RENDER

import React from 'react';

class App extends React.Component {
  render() {
    return (
      <h1>This is the content of the Header component</h1>
    );
  }
}
export default App;
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
GETDERIVED STATE FROM PROPS

import React from 'react';

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {favoritecolor: "red"};
  }
  static getDerivedStateFromProps(props, state) {
    return {favoritecolor: props.favcol };
  }
  render() {
    return (
      <h1>My Favorite Color is {this.state.favoritecolor}</h1>
    );
  }
}
export default App;
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
(DATA TO USER) REST API:

import express from 'express';
import fs from 'fs';
const app = express();

const port = 3000

app.get('/', function (req, res) {
   fs.readFile("user.json", 'utf8', (err, data) => {
      res.end( data );
   });
})
app.listen(port , function () {
   console.log(`app listening at ${port}`)
})

USER.JSON DATA

{   
"user1" : {
       "name" : "mahesh",
       "password" : "password1",
       "profession" : "teacher",
       "id": 1

    },


    "user2" : {
        "name" : "suresh",
        "password" : "password2",
        "profession" : "librarian",
        "id": 2
    },

    "user3" : {
        "name" : "ramesh",
        "password" : "password3",
        "profession" : "clerk",
        "id": 3
    }
}
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
EXPRESS
server.js
import express from 'express'
import path from 'path'
const app = express()
const port = 3000
app.get('/', (req, res) => {
  //res.send('Hello World!')
  //res.sendFile(path.resolve("index.html"))
  res.render('index.ejs')
  console.log("get req for homepage")
})

app.listen(port, () => {
  console.log(`Example app listening on port ${port}`)
})

index.ejs
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h2>Hello World!!</h2>
    <% 
    let d = new Date();
    %>
    <%= d %>
</body>
</html>

node server.js
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
RENDERING LISTS
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>);
reportWebVitals();

//App.js



#Passing properties from one component to another:

const people = [
  'Creola Katherine Johnson: mathematician',
  'Mario José Molina-Pasquel Henríquez: chemist',
  'Mohammad Abdus Salam: physicist',
  'Percy Lavon Julian: chemist',
  'Subrahmanyan Chandrasekhar: astrophysicist'];
function App() {
  const listItems = people.map(person =>
    <li>{person}</li>
  );
  return <ul>{listItems}</ul>;
}
export default App;
//App.js
function Avatar() {
    return (
      <img
        className="avatar"
        src="https://i.imgur.com/1bX5QH6.jpg"
        alt="Lin Lanying"
        width={100}
        height={100}
      />);}
  export default function App() {
    return (
      <Avatar />);}
      
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&


1. Build Search filter in React
Code:
import React, { useState } from 'react';
export default function Filter(){
const itemList = [ "Paris", "New York", "Tokyo", "London", "Rome", "Sydney", "Dubai", "Barcelona"
];
const [filteredList, setFilteredList] = useState(itemList);
const filterBySearch = (event) => {
const query = event.target.value;
let updatedList = [...itemList];
updatedList = updatedList.filter((item) => {
return item.toLowerCase().indexOf(query.toLowerCase()) !== -1;
});
setFilteredList(updatedList);
};
return(
<div>
<div className="search-header">
<div className="search-text"><h1>Search:</h1></div>
<input id="search-box" onChange={filterBySearch} />
</div>
<div id="item-list">
<ul className="nono">
{filteredList.map((item, index) => (
<li key={index}>{item}</li>
))}
</ul>
</div>
</div>
);
}


&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
Simple counter exercise
Code:
import React, { useState } from "react";
export default function Counter() {
const [count, setCount] = useState(0);
const incrementCount = () => {
setCount(count + 1);
};
const decrementCount = () => {
if(count>0){
setCount(count - 1);
}
};
return (
<div>
<h1>Counter</h1>
<p>Count: {count}</p>
<button onClick={incrementCount}>Increment</button>
<button onClick={decrementCount}>Decrement</button>
</div>
);
}

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
Simple Login form in React
Code:
import React, { useState } from 'react';
const LoginForm = () => {
const [name, setName] = useState('');
const [email, setEmail] = useState('');
const [password, setPassword] = useState('');
const [loggedIn, setLoggedIn] = useState(false);
const [error, setError] = useState('');
const correctName = 'John';
const correctEmail = 'john@example.com';
const correctPassword = 'password123'; // Correct password
const handleSubmit = (e) => {
e.preventDefault();
if (name === correctName && email === correctEmail && password === correctPassword) {setLoggedIn(true);
setError('');
} else {
setLoggedIn(false);
setError('Invalid credentials. Please try again.');
}
};
return (
<div>
{!loggedIn ? (
<form onSubmit={handleSubmit}>
<label>
Name:
<input
type="text" value={name}onChange={(e) => setName(e.target.value)}
/>
</label>
<br />
<label>
Email:
<input
type="email" value={email}
onChange={(e) => setEmail(e.target.value)}
/>
</label>
<br />
<label>
Password:
<input
type="password" value={password}
onChange={(e) => setPassword(e.target.value)}
/>
</label>
<br />
<button type="submit">Login</button>
{error && <div>{error}</div>}
</form>
) : (
<div>Welcome, {name}!</div>
)}
</div>
);
};
export default LoginForm;

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
FS
//const fs = require ("fs")
import fs from "fs"

/*fs.writeFile("one.txt","data",(err)=>{
    if (err) throw err ;
    console.log("done")
})
*/
fs.readFile("one.txt","utf-8",(err,data)=>{
    if (err) throw err ;
    console.log(data);
})

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
/adduser in express

index.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <form action="addUser" method="post">
        Username  <input type="text" name="username" />
          <input type="submit" />
      </form>
</body>
</html>

index.js

import express from "express";
import fs from "fs"
import path from "path"
import bodyparser from "body-parser"
var app = express();

app.use(bodyparser.urlencoded({ extended: true }));

app.get("/",(req,res)=>{
    res.sendFile(path.resolve("index.html"));
})

app.get('/listUsers', (req, res)=> {
   fs.readFile( "users.json", 'utf8', (err, data) =>{
      console.log( data );
      res.end( data );
   });
})

app.post('/addUser',(req,res)=>{
    let username=req.body.username;
    let jsondata = {
        "usernew": {
            "name":username
        }
    }
    fs.readFile("users.json", 'utf8', (err, data)=> {
        data = JSON.parse( data );
        data["usernew"] = jsondata["usernew"];
        console.log( data );
        res.end( JSON.stringify(data));
     });
})

app.listen(2031, function () {
      console.log("Listening at 2031");
})
server.js
import express from 'express'
import path from 'path'
const app = express()
const port = 3000


app.use(express.urlencoded({extended:true}));
app.use(express.json());
app.get("/",(req,res)=>{
    res.sendFile(path.resolve("index.html"))});

app.post("/submit",async(req,res)=>{
    console.log(req.body);
    res.sendFile(path.resolve("success.html"));

})

app.listen(port, () => {
  console.log(`Example app listening on port ${port}`)
})

index.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <form action="/submit" method="post">
        <input type="text" id="uname" name="uname">
        <input type="password" id="password" name="password">
        <button>Submit</button>
    </form>
</body>
</html>

///////////////////////////////////////////////////////////////////////////
Delete a file
const fs = require('fs');

const filePathToDelete = 'path/to/your/file.txt';

fs.unlink(filePathToDelete, (err) => {
    if (err) {
        console.error('Error deleting file:', err);
    } else {
        console.log('File deleted successfully');
    }
});

//////////////////////////////////////////////////////////////

Rename a file
const fs = require('fs');

const oldFilePath = 'path/to/your/oldfile.txt';
const newFilePath = 'path/to/your/newfile.txt';

fs.rename(oldFilePath, newFilePath, (err) => {
    if (err) {
        console.error('Error renaming file:', err);
    } else {
        console.log('File renamed successfully');
    }
});



