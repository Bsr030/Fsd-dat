SET - 1
--------------------------------------------------------------------------------------------

SET - 2
--------------------------------------------------------------------------------------------

SET - 3
--------------------------------------------------------------------------------------------

1st que

// dataModule.js
const data = {
  key1: 'value1',
  key2: 'value2',
  key3: 'value3',
};

module.exports = data;

const fs = require('fs');
const importedData = require('./dataModule');

const filePath = 'output.txt';

// Convert the imported data to a JSON string
const jsonData = JSON.stringify(importedData, null, 2);

// Write the JSON data to a file
fs.writeFile(filePath, jsonData, (err) => {
  if (err) {
    console.error('Error writing to file:', err);
  } else {
    console.log(`Data successfully written to ${filePath}`);
  }
});
------------------------------------------------------------------------------------
2nd que



SET - 4
--------------------------------------------------------------------------------------------
1st que

import React, { useState } from 'react';

const ListComponent = () => {
  const [items, setItems] = useState(['Item 1', 'Item 2', 'Item 3']);

  return (
    <div>
      <h2>List of Items:</h2>
      <ul>
        {items.map((item, index) => (
          <li key={index}>{item}</li>
        ))}
      </ul>
    </div>
  );
};

export default ListComponent;
-----------------------------------------------------------------------------

2nd que

const fs = require('fs');

// Delete a file
const deleteFilePath = 'fileToDelete.txt';
fs.unlink(deleteFilePath, (err) => {
  if (err) {
    console.error('Error deleting file:', err);
  } else {
    console.log('File deleted successfully!');
  }
});

// Rename a file
const currentFilePath = 'currentFileName.txt';
const newFilePath = 'newFileName.txt';
fs.rename(currentFilePath, newFilePath, (err) => {
  if (err) {
    console.error('Error renaming file:', err);
  } else {
    console.log('File renamed successfully!');
  }
});

------------------------------------------------------------------------------------------

SET - 5
--------------------------------------------------------------------------------------------
1st que

LoginForm.jsx

import React, { useState } from 'react';

const LoginForm = () => {
  const [name, setName] = useState('');
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [loggedIn, setLoggedIn] = useState(false);

  const handleLogin = () => {
    // You can replace this with actual authentication logic
    const isValid = username === 'yourUsername' && password === 'yourPassword';

    if (isValid) {
      setLoggedIn(true);
    } else {
      alert('Invalid credentials. Please try again.');
    }
  };

  return (
    <div>
      {loggedIn ? (
        <p>Welcome, {name}!</p>
      ) : (
        <form>
          <label>
            Name:
            <input type="text" value={name} onChange={(e) => setName(e.target.value)} />
          </label>
          <br />
          <label>
            Username:
            <input type="text" value={username} onChange={(e) => setUsername(e.target.value)} />
          </label>
          <br />
          <label>
            Password:
            <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} />
          </label>
          <br />
          <button type="button" onClick={handleLogin}>
            Login
          </button>
        </form>
      )}
    </div>
  );
};

export default LoginForm;

-------------------------------------------------------------------------------------
2 nd question 

mathModule.js

const add = (a, b) => {
  return a + b;
};

module.exports = { add };

main.js

const mathModule = require('./mathModule');

const result = mathModule.add(5, 3);
console.log('Result of addition:', result);




SET - 6
--------------------------------------------------------------------------------------------

SET - 7
--------------------------------------------------------------------------------------------

1st que

Counter.jsx

import React, { useState } from 'react';

const CounterComponent = () => {
  // useState returns an array with two elements: the current state value and a function that lets you update it.
  const [count, setCount] = useState(0);

  // Event handler to increment the counter
  const handleIncrement = () => {
    setCount(count + 1);
  };

  // Event handler to decrement the counter
  const handleDecrement = () => {
    setCount(count - 1);
  };

  return (
    <div>
      <h2>Counter: {count}</h2>
      <button onClick={handleIncrement}>Increment</button>
      <button onClick={handleDecrement}>Decrement</button>
    </div>
  );
};

export default CounterComponent;

------------------------------------------------------

2nd que

const fs = require('fs');

// Specify the file path and the content to be appended
const filePath = 'example.txt';
const contentToAppend = 'This is the new content to append.\n';

// Append content to the file
fs.appendFile(filePath, contentToAppend, (err) => {
  if (err) {
    console.error('Error appending to file:', err);
  } else {
    console.log('Content appended successfully!');
  }
});


------------------------------------------------------------------------------
